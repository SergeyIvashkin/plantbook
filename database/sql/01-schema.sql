-- Роли пользователей
create table if not exists user_roles(
    id_role int generated by default as IDENTITY PRIMARY KEY,
    name_role varchar(100) not null UNIQUE,
    created_at timestamp not null default current_timestamp,
    modified_at timestamp
    -- constraints:
    );
   
-- Пользователи
create table if not exists users(
    id_user bigint generated by default as IDENTITY PRIMARY KEY,
    name_user varchar(100) not null,
    email_addr varchar(100) not NULL UNIQUE,
    user_role integer not null,
    description text,
    created_at timestamp not null default current_timestamp,
    modified_at timestamp,
    -- constraints:
    constraint user_role_fk foreign key (user_role) references user_roles (id_role)
    );
      
-- Растения
create table if not exists plants(
    id_plant bigint generated by default as IDENTITY PRIMARY KEY,
    name_plant varchar(255) not null UNIQUE,
    photo_url varchar, 
    description text,
    created_at timestamp not null default current_timestamp,
    modified_at timestamp
-- constraints:
    );

-- Растения пользователя   
create table if not exists user_plants(
	id_user_plant bigint generated by default as IDENTITY PRIMARY KEY,
	id_user bigint,
	id_plant bigint,
	planting_time timestamp not null,
	name_user_plant varchar(100),
	description text,
	created_at timestamp not null default current_timestamp,
    modified_at timestamp,
-- constraints:
    constraint user_plants_id_user_fk foreign key (id_user) references users (id_user) on delete cascade,
    constraint user_plants_id_plan_fk foreign key (id_plant) references plants (id_plant)
);
   
create table if not exists plant_schedule(
	id_plant_schedule bigint generated by default as IDENTITY PRIMARY KEY,
	id_plant bigint not null,
	watering interval,
	created_at timestamp not null default current_timestamp,
    modified_at timestamp,
-- constraints:
    constraint plant_schedule_id_plant_fk foreign key (id_plant) references plants (id_plant) on delete cascade
);

--Расписание пользователя
create table if not exists user_schedule(
	id_user_schedule bigint generated by default as IDENTITY PRIMARY KEY,
	id_user bigint,
	id_plant_schedule bigint,
-- constraints:
    constraint user_schedule_id_user_fk foreign key (id_user) references users (id_user),
    constraint user_schedule_id_plant_schedule_fk foreign key (id_plant_schedule) references plant_schedule (id_plant_schedule)

);

create table if not exists blogs(
	id_blog bigint generated by default as IDENTITY PRIMARY KEY,
	id_user bigint,
	id_user_plant bigint,
-- constraints
	constraint blogs_id_user_fk foreign key (id_user) references users (id_user) on delete cascade,
	constraint blogs_id_user_plant_fk foreign key (id_user_plant) references user_plants (id_user_plant) on delete cascade
);

create table if not exists posts(
id_post bigint generated by default as IDENTITY PRIMARY KEY,
id_blog bigint,
text_post text,
constraint posts_id_blog_fk foreign key (id_blog) references blogs (id_blog) on delete cascade
);