// Code generated by go-swagger; DO NOT EDIT.

package gardens

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetUserGardensHandlerFunc turns a function with the right signature into a get user gardens handler
type GetUserGardensHandlerFunc func(GetUserGardensParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUserGardensHandlerFunc) Handle(params GetUserGardensParams) middleware.Responder {
	return fn(params)
}

// GetUserGardensHandler interface for that can handle valid get user gardens params
type GetUserGardensHandler interface {
	Handle(GetUserGardensParams) middleware.Responder
}

// NewGetUserGardens creates a new http.Handler for the get user gardens operation
func NewGetUserGardens(ctx *middleware.Context, handler GetUserGardensHandler) *GetUserGardens {
	return &GetUserGardens{Context: ctx, Handler: handler}
}

/* GetUserGardens swagger:route GET /api/v1/gardens gardens getUserGardens

Get list users's gardens

Shows list users's gardens

*/
type GetUserGardens struct {
	Context *middleware.Context
	Handler GetUserGardensHandler
}

func (o *GetUserGardens) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetUserGardensParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
