// Code generated by go-swagger; DO NOT EDIT.

package plant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kaatinga/plantbook/internal/api/models"
)

// GetPlantByIDOKCode is the HTTP code returned for type GetPlantByIDOK
const GetPlantByIDOKCode int = 200

/*GetPlantByIDOK successful operation

swagger:response getPlantByIdOK
*/
type GetPlantByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Plant `json:"body,omitempty"`
}

// NewGetPlantByIDOK creates GetPlantByIDOK with default headers values
func NewGetPlantByIDOK() *GetPlantByIDOK {

	return &GetPlantByIDOK{}
}

// WithPayload adds the payload to the get plant by Id o k response
func (o *GetPlantByIDOK) WithPayload(payload *models.Plant) *GetPlantByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get plant by Id o k response
func (o *GetPlantByIDOK) SetPayload(payload *models.Plant) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPlantByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPlantByIDBadRequestCode is the HTTP code returned for type GetPlantByIDBadRequest
const GetPlantByIDBadRequestCode int = 400

/*GetPlantByIDBadRequest Invalid ID supplied

swagger:response getPlantByIdBadRequest
*/
type GetPlantByIDBadRequest struct {
}

// NewGetPlantByIDBadRequest creates GetPlantByIDBadRequest with default headers values
func NewGetPlantByIDBadRequest() *GetPlantByIDBadRequest {

	return &GetPlantByIDBadRequest{}
}

// WriteResponse to the client
func (o *GetPlantByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetPlantByIDNotFoundCode is the HTTP code returned for type GetPlantByIDNotFound
const GetPlantByIDNotFoundCode int = 404

/*GetPlantByIDNotFound Plant not found

swagger:response getPlantByIdNotFound
*/
type GetPlantByIDNotFound struct {
}

// NewGetPlantByIDNotFound creates GetPlantByIDNotFound with default headers values
func NewGetPlantByIDNotFound() *GetPlantByIDNotFound {

	return &GetPlantByIDNotFound{}
}

// WriteResponse to the client
func (o *GetPlantByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*GetPlantByIDDefault unexpected error

swagger:response getPlantByIdDefault
*/
type GetPlantByIDDefault struct {
	_statusCode int
	/*error

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetPlantByIDDefault creates GetPlantByIDDefault with default headers values
func NewGetPlantByIDDefault(code int) *GetPlantByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetPlantByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get plant by Id default response
func (o *GetPlantByIDDefault) WithStatusCode(code int) *GetPlantByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get plant by Id default response
func (o *GetPlantByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithXRequestID adds the xRequestId to the get plant by Id default response
func (o *GetPlantByIDDefault) WithXRequestID(xRequestID string) *GetPlantByIDDefault {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get plant by Id default response
func (o *GetPlantByIDDefault) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get plant by Id default response
func (o *GetPlantByIDDefault) WithPayload(payload *models.ErrorResponse) *GetPlantByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get plant by Id default response
func (o *GetPlantByIDDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPlantByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
