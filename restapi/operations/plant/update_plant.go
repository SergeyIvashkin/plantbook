// Code generated by go-swagger; DO NOT EDIT.

package plant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdatePlantHandlerFunc turns a function with the right signature into a update plant handler
type UpdatePlantHandlerFunc func(UpdatePlantParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdatePlantHandlerFunc) Handle(params UpdatePlantParams) middleware.Responder {
	return fn(params)
}

// UpdatePlantHandler interface for that can handle valid update plant params
type UpdatePlantHandler interface {
	Handle(UpdatePlantParams) middleware.Responder
}

// NewUpdatePlant creates a new http.Handler for the update plant operation
func NewUpdatePlant(ctx *middleware.Context, handler UpdatePlantHandler) *UpdatePlant {
	return &UpdatePlant{Context: ctx, Handler: handler}
}

/* UpdatePlant swagger:route PUT /plant plant updatePlant

Update an existing plant

*/
type UpdatePlant struct {
	Context *middleware.Context
	Handler UpdatePlantHandler
}

func (o *UpdatePlant) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdatePlantParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
